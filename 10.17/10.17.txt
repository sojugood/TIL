팔로우 기능

User(M) - User(N)

 0명 이상의 회원은 0명 이상의 회원과 관련
 -> 회원은 0명 이상의 팔로워를 가질 수 있고, 0명 이상의 다른 회원들을 팔로잉 할 수 있음


.exists()
 QuerySet에 결과가 포함되어 있으면 True를 반환하고 결과가 포함되어 있지 않으면 False를 반환
 -> 큰 QuerySet에 있는 특정 객체 검색에 유용


Django Fixtures

Fixtures : Django가 데이터베이스로 가져오는 방법을 알고 있는 데이터 모음
 -> 데이터 베이스 구조에 맞추어 작성 되어있음

초기 데이터 제공 : Fixtures의 사용 목적

fixtures 관련 명령어
 - dumpdata : 생성(데이터 추출)
 - loaddata : 로드(데이터 입력)

dumpdata : 데이터베이스의 모든 데이터를 추출
 -> 추출한 데이터는 json 형식으로 저장

loaddata : Fixtures 데이터를 데이터베이스로 불러오기

Fixtures 파일 기본 경로 : app_name/fixtures/
 -> Django는 설치된 모든 app의 디렉토리에서 fixtures 폴더 이후의 경로로 fixtures 파일을 찾아 load

loaddata 순서 주의사항

 - 만약 loaddata를 한번에 실행하지 않고 하나씩 실행한다면 모델 관계에 따라 load하는 순서가 중요할 수 있음
  - comment는 article에 대한 key 및 user에 대한 key가 필요
  - article은 user에 대한 key가 필요

 - 즉, 현재 모델 관계에서는 user -> article -> comment 순으로 data를 넣어야 오류가 발생하지 않음



++

Imporve query(쿼리 개선)
 같은 결과를 얻기 위해 DB 측에 보내는 쿼리 개수를 점차 줄여 조회하기

