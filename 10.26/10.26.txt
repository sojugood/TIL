Controlling event

event : 무언가 일어났다는 신호, 사건
 -> 모든 DOM 요소는 이러한 event를 만들어 냄

DOM 요소는 event를 받고 받은 event를 '처리' 할 수 있음

event handler : 이벤트가 발생했을 때 실행되는 함수
 -> 사용자의 행동에 어떻게 반응할지를 JavaScript 코드로 표현한 것

.addEventListener() : 대표적인 이벤트 핸들러 중 하나
 -> 특정 이벤트를 DOM 요소가 수신할 때마다 콜백 함수를 호출

EventTarget(DOM 요소).addEventListener(type(수신할 이벤트), handler(콜백 함수))
 - 대상에 특정 Event가 발생하면, 지정한 이벤트를 받아 할 일을 등록한다.

.addEventListener(type, handler)
 - type
  - 수신할 이벤트 이름
  - 문자열로 작성(ex. 'click')

 - handler
  - 발생한 이벤트 객체를 수신하는 콜백 함수
  - 콜백 함수는 발생한 Event object를 유일한 매개변수로 받음

이벤트 핸들러의 콜백함수를 화살표 함수로 작성하면 this가 전역에 할당됨(사용X)

addEventListner의 콜백 함수 특징
 - 발생한 이벤트를 나타내는 Event 객체를 유일한 매개변수로 받음
 - 아무것도 반환하지 않음


target & currentTarget 속성

target 속성
 - 이벤트가 발생한 가장 안쪽의 요소(target)를 참조하는 속성
 - 실제 이벤트가 시작된 target 요소
 - 버블링이 진행 되어도 변하지 않음

currentTarget 속성
 - 현재 요소
 - 항상 이벤트 핸들러가 연결된 요소만을 참조하는 속성
 - this 와 같음


event handler 활용

