

1. 컬렉션

여러 개의 항목 또는 요소를 담는 자료 구조
str, list, tuple, set, dict

ex)ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

x = 10
y = x

x = 12

print(y) = 10
print(x) = 12

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  차이점: 위는 x 값이 stack에 저장되고 아래는 리스트가 heap에 
저장되어 참조하고 stack에 주소값이 저장되기 때문 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

a = [1, 2, 3]
b = a

a[0] = 100

print(b) = [100, 2, 3]
print(a) = [100, 2, 3]

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

2. Sequence Type / 비 Sequence

여러 개의 값들을 순서대로 나열하여 저장하는 자료형
str, list, tuple, range

*******40페이지 my_str[::-1] 시험 출제


list : 유연성이 높다
차이
array : 안정성이 높다


3. 형변환(다른언어 배울 때 더 큰 의미)



4. 산술연산자






리스트에서 정렬되어 있다면 [리스트번호] 를 이용하여 쉽게 찾을 수 있지만,
데이터가 많아지고 정렬이 안되어 있다면 최소 1번 ~ 최대 X번 걸릴 수 있음.(비효율)
-----> dict(딕셔너리)를 이용하면 key를 이용하여 쉽게 찾을 수 있음.






