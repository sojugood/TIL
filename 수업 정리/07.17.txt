파이썬 프로그램 <-> 파이썬 인터프리터 <-> 운영 체제

인터프리터 : 프로그래밍 언어 구현 방법 중 하나로, 코드를 한 줄씩 읽어들여 바로바로 실행하는 방식입니다. 이와는 달리 컴파일러는 코드 전체를 읽어 들인 후 기계어로 변환하고, 그 후에 프로그램을 실행합니다.

파이썬 인터프리터는 파이썬 코드를 읽고, 그 코드를 바로 실행하는 프로그램입니다. 파이썬 인터프리터는 대화형 모드로 실행될 수 있으며, 사용자가 파이썬 코드를 한 줄씩 입력할 수 있게 해줍니다. 사용자가 코드를 입력하면, 인터프리터는 그 코드를 바로 실행하고 결과를 반환합니다.

파이썬 인터프리터를 사용하는 2가지 방법
1.shell 이라는 프로그램으로 한 번에 한 명령어 씩 입력해서 실행
2. 확장자가 .py인 파일에 작성된 파이썬 프로그램을 실행


표현식 : 값, 변수, 연산자 등을 조합하여 계산되고 결과를 내는 코드 구조

표현식이 '평가'되어 값이 반환됨

평가 : 표현식이나 문장을 실행하여 그 결과를 계산하고 값을 결정하는 과정
 -> 표현식이나 문장을 순차적으로 평가하여 프로그램의 동작을 결정

문장 : 실행 가능한 동작을 기술하는 코드(조건문, 반복문, 함수 정의 등)

문장 > 표현식

타입 : 값이 어떤 종류의 데이터인지, 어떻게 해석되고 처리되어야 하는지를 정의
 
 타입은 2가지 요소로 이루어짐 : '값'과 '값에 적용할 수 있는 연산'




변수 : 값을 참조하는 이름
- 어떠한 "한 값"을 가진 메모리 공간에 붙인 "이름" 또는 공간 "그 자체"

변수명 규칙
 - 영문 알파벳, 언더스코어(_), 숫자로 구성
 - 숫자로 시작할 수 없음
 - 대소문자를 구분
 - 파이썬 내부 예약어는 사용할 수 없음(ex 'False', 'None', 'True', 'and' ..)

변수에 재할당

number = 10
double = 2 * number
print(double) # 20

bumber = 5
print(double) # 20

! 변수 double에는 값 20의 주소가 들어 있으니 여전히 20을 참조





변수명 본인의 정보를 작성해보세요
이름 name = "Sang Ik Sim"
나이 age = 26

one = 1 -> ox 0000000 -> 1
 변수     -> 메모리 주소 -> 값

id() # 값의 메모리 주소를 알려주는 함수

print(id(1))

one =1

print(id(one))

three = 1 + 2

print(id(2))

print(id(three))