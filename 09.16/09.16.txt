**<9/18 과목평가 대비>**

- HTML 요소에 대한 설명 → 하나의 요소(element)는 **여는 태그**와 **닫는 태그** 그리고 **그 안의 내용**(내용이 없는 경우도 있음)으로 구성됨
- CSS Layout에서 문제 많이 나옴
- 온라인 실습실 과제 2-4에서 서술형 문제 나옴
- 마진 상쇄
- flex grow
- normal flow란 무엇인가: 좌상단에서 우하단으로 가는 흐름. 디폴트값
- display: none 시험에 나옴
- CDN 시험에 나옴
- bootstrap grid 12개의 컬럼으로 이루어짐
- grid 구성요소 3가지 [container, column, gutter]




ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Web site : 인터넷에서 여러 개의 Web page가 모인 것으로, 사용자들에게 정보나 서비스를 제공하는 공간

Web page : HTML. CSS 등의 웹 기술을 이용하여 만들어진, Web site 를 구성하는 하나의 요소

HTML : 웹 페이지의 의미와 "구조"를 정의하는 언어(Markup 언어 / 프로그래밍 언어가 아님)

<head></head> : HTML 문서에 관련된 설명, 설정 등 / 사용자에게 보이지 않음

<body></body> : 페이지에 표시되는 모든 콘텐츠

HTML Element(요소) : 하나의 요소는 여는 태그와 닫는 태그 그리고 그 안의 내용으로 구성됨

HTML Attributes(속성) : 속성은 요소 이름과 속성 사이에 공백이 있어야 함 / 나타내고 싶지 않지만 추가적인 기능, 내용을 담고 싶을 때 사용, CSS에서 해당 요소를 선택하기 위한 값으로 활용됨

HTML Text structure : HTML의 주요 목적 중 하나는 텍스트 구조와 의미를 제공하는 것
 ex) h1 요소는 문서의 최상위 제목이라는 의미를 부여


CSS : 웹 페이지의 디자인과 레이아웃을 구성하는 언어

전체 선택자(*)
요소 선택자
클래스 선택자(.클래스명)
아이디 선택자(#아이디명)
클래스 결합자(자식(>), 자손( ))

우선순위 : 동일한 요소에 적용 가능한 같은 스타일을 두 가지 이상 작성 했을 때, 어떤 규칙이 적용 되는지 결정하는 것
 - 계단식 : 동일한 우선순위를 갖는 규칙이 적용될 때, CSS에서 마지막에 나오는 규칙이 적용됨

우선순위가 높은 순
1. Importance : !important
2. Inline 스타일
3. 선택자 : id 선택자 > class 선택자 > 요소 선택자
4. 소스 코드 순서

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
CSS Box Model : 모든 HTML 요소를 사각형 박스로 표현하는 개념
 > 내용(content), 안쪽 여백(padding), 테두리(border), 외부 간격(margin)으로 구성

width -> box-sizing: content-box;(기본값) 컨텐츠 너비를 설정
         -> box-sizing: border-box; 박스 너비를 설정

박스 타입
block & inline

inline : 자신의 크기만 차지(a, img, span), width와 height 속성 사용 불가(컨텐츠 크기), padding, margins, border가 적용되고 수직 방향으로는 밀어낼 수 없음. 수평 방향으로만 밀어낼 수 있음.
block : 한 줄 차지(h1~6, p, div)

Normal flow : CSS를 적용하지 않았을 경우 웹페이지 요소가 기본적으로 배치되는 방향

속성에 따른 수평 정렬
 -block : margin 값으로 정렬
 -inline : text-align 값으로 정렬

inline-block
 block 요소의 특징을 가짐(width 및 height 속성 사용 가능)
 요소가 줄 바꿈 되는 것을 원하지 않으면서 너비와 높이를 적용하고 싶은 경우에 사용

display: none; : 요소를 화면에 표시하지 않고, 공간조차 부여하지 않음
visibility: hidden; : 요소가 화면에 보이지 않지만, 공간은 부여됨(자식 요소도 hidden의 영향을 받음, visible 을 적용하면 자식은 보여질 수 있음)


CSS Layout : 각 요소의 위치와 크기를 조정하여 웹 페이지의 디자인을 결정하는 것

CSS Position : 요소를 Normal Flow에서 제거하여 다른 위치로 배치하는 것
 static : 기본값
 relative : 본인의 static 시절의 위치를 기준으로 이동
 absolute : 본인의 static 영역을 버리고 이동함(이동하는 기준 : static이 아닌 relative부모를 기준으로 함), 요소를 Normal Flow에서 제거
 fixed : 보이는 화면에 고정(viewport), 요소를 Normal Flow에서 제거
 sticky : 요소가 특정 임계점에 도달하면 그 위치에 고정(fixed), 다음 sticky 요소가 나오면 이전 sticky 요소의 자리를 대체

z-index : 요소가 겹쳤을 때 어떤 요소 순으로 위에 나타낼 지 결정, 정수 값을 사용해 z축 순서를 지정, 더 큰 값을 가진 요소가 작은 값의 요소를 덮음


CSS Flexbox : 요소를 행과 열 형태로 배치하는 1차원 레이아웃 방식 > 공간 배열 & 정렬

부모(Flex Container)가 주체가 되어 자식(Flex Item)을 컨트롤

메인 축(main axis) 기본 왼쪽
교차 축(cross axis) 기본 위쪽

주 축만 기억! 주 축의 수직인 축이 교차 축임

Flex Container
 - display: flex; 혹은 display: inline-flex; 가 설정된 부모 요소
 - 이 컨테이너의 1차 자식 요소들이 Flex Item이 됨
 - flexbox 속성 값들을 사용하여 자식 요소 Flex Item들을 배치

flex-direction : 메인 축과 방향 바꿈, 기본값 : row

flex-wrap : flex item 목록이 flex container의 하나의 행에 들어가지 않을 경우 다른 행에 배치할지 여부를 설정, 기본값 : nowrap(화면 크기 줄여도 하나의 행에 들어가게 함)

justify-content : 주 축을 따라 flex item과 주위에 공간을 분배, 기본값 : flex-start

align-content : 교차 축을 따라 flex item과 주위에 공간을 분배, flex-wrap이 wrap으로 설정된 여러 행에만 적용됨, nowrap으로 설정된 경우(= 한 줄 짜리 행) 효과 없음

align-items : 교차 축을 따라 flex item 행을 정렬, 하나의 행일때만 적용됨

align-self : 교차 축을 따라 개별 flex item을 정렬, item에 적용해야함

content : 여러 행, items : 한 행, self : 요소 하나

배치 : flex-direction, flex-wrap
공간 분배 : justify-content, align-content
정렬 : align-items, align-self

Flex Item 관련 속성
 - align-self, flex-grow, flex-basis, order

flex-grow : 기본값 0, flex 컨테이너의 전체 너비에서 모든 item들의 너비를 제외한 여분 공간을 어떻게 나누어 가질 것인지를 결정

마진 상쇄 : 마진 상쇄는 수직 마진에만 적용되며, 수평 마진에는 적용되지 않음, 마진 상쇄의 주된 특징은, 겹친 마진 중 가장 큰 마진만 적용되는 것

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Bootstrap : CSS 프론트엔드 프레임워크

Bootstrap에는 특정한 규칙이 있는 클래스 이름으로 이미 스타일 및 레이아웃이 작성되어 있음

Bootstrap Component : Bootstrap에서 제공하는 UI 관련 요소, 일관된 디자인을 제공하여 웹 사이트의 구성 요소를 구축하는 데 유용하게 활용

Semantic Web : 웹 데이터를 의미론적으로 구조화된 형태로 표현하는 방식

CDN(Content Delivery Network) : 지리적 제약 없이 빠르고 안전하게 콘텐츠를 전송할 수 있는 전송 기술

Bootstrap을 사용하는 이유
 가장 인기 있고 잘 정립된 CSS 프레임워크
 사전에 디자인된 다양한 컴포넌트 및 기능
 손쉬운 반응형 웹 디자인 구현
 커스터마이징이 용이
 크로스 브라우징 지원

의미론적인 마크업의 이점
 검색엔진 최적화 : 검색엔진이 해당 웹 사이트를 분석하기 쉽게 만들어 검색 순위에 영향을 줌
 웹 접근성 : 시각 장애 사용자가 스크린 리더기로 웹 페이지를 사용할 때 추가적으로 도움

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Bootstrap Grid system : 웹 페이지의 레이아웃을 조정하는 데 사용되는 12개의 컬럼으로 구성된 시스템

Grid system 목적 : 반응형 디자인을 지원해 웹 페이지를 모바일, 태블릿, 데스크탑 등 다양한 기기에서 적절하게 표시할 수 있도록 도움

Grid system 기본 요소
 1. Container : Column들을 담고 있는 공간
 2. Column : 실제 컨텐츠를 포함하는 부분
 3. Gutter : 컬럼과 컬럼 사이의 여백 영역

 1개의 row안에 12칸의 column 영역이 구성, 각 요소는 12칸 중 몇 개를 차지할 것인지 지정됨

container > row > col

중첩(Nesting) : Grid 시스템 내의 Grid 시스템

상쇄(Offset) : 해당 칸의 Col만큼 점프, 작성 순서와 상관없이 항상 상쇄가 먼저 발생

Gutters : column 사이에 여백 영역, x축은 padding y축은 margin으로 여백 생성, row에 선언


Responsive Web Design

Grid system breakpoints : 웹 페이지를 다양한 화면 크기에서 적절하게 배치하기 위한 분기점 -> 화면 너비에 따라 6개의 분기점 제공(xs, sm, md, lg, xl, xxl)
 - 각 breakpoints 마다 설정된 최대 너비 값 "이상으로" 화면이 커지면 grid system 동작이 변경됨, xs은 미만이라 따로 선언하지 않음(기본)

breakpoint의 특징(~이상) 때문에 특정 조건에서 offset이 선언되면 계속 유지됨. 다음 조건에서 바꿔줘야 함.

Grid System은 화면 크기에 따라 12개의 칸을 각 요소에 나누어 주는 것

