서버 : 부탁을 받으면 처리해주거나, 부탁대로 원하는 값을 돌려주는 역할을 함

클라이언트 : 부탁하는 역할

클라이언트 ------너가 가진 정보 줘----> 서버
클라이언트 <----원하는 정보 줄게------ 서버

클라이언트가 정보를 달라고 요청을 보내는 방법 : requests(Python 라이브러리)

 1. 웹 브라우저를 켜서 주소창에 주소(URL)를 입력한다.
 2. 서버에 정보를 요청하는 파이썬 코드를 작성한다.


API
 클라이언트가 원하는 기능을 수행하기 위해서 서버 측에 만들어 놓은 프로그램
 - 기능 예시 : 데이터 저장, 조회, 수정, 삭제 등등

 서버 측에 특정 주소로 요청이 오면 정해진 기능을 수행하는 API를 미리 만들어 둠
 - 클라이언트는 서버가 미리 만들어 놓은 주소로 요청을 보냄


클라이언트 ---------요청--------> 서버(API -----데이터 검색----> DATA)
클라이언트 <----데이터 전달----- 서버(API <----데이터 조회----- DATA)


날씨 정보를 수집하기 위해서는 두 가지를 찾아야 한다.
 1. 날씨 정보를 가지고 있는 서버
 2. 해당 서버가 제공하는 API

오픈 API
 외부에서 사용할 수 있도록 무료로 개방(OPEN) 된 API
 사용법은 공식 문서(Docs)에 명시되어 있음
 프로젝트에서 사용되는 API
 - OpenWeatherMap API : 기상 데이터 및 날씨 정보를 제공하는 오픈 API
 - 금융상품통합비교공시 API : 금융감독원에서 제공하는 금융 상품 정보를 제공하는 오픈 API

오픈 API 특징 및 주의사항
 악성 사용자가 100만 개의 계정을 생성해 API에 요청을 보내는 상황
 - 너무 많은 계정에서 동시에 요청을 보내면 서버가 견디지 못함

 이러한 문제점을 해결하기 위해 오픈 API는 API KEY를 활용하여 사용자를 확인함
 - 사용자 인증 혹은 회원가입을 하면 서버에서 API KEY를 발급해 줌
 - 서버에 요청할 때 마다 해당 API KEY를 함께 보내 정상적인 사용자인 것을 확인 받음

 API KEY를 가지고 있는 악성 사용자가 1초에 100만 개의 요청을 보내는 상황
 - 서버가 견디지 못하여 정상적인 서비스가 불가능

 일부 오픈 API는 사용량이 제한되어 있음
 - 공식 문서의 일일 및 월간 사용량 제한을 반드시 확인해야 함
 - [주의] 사용량이 초과될 경우 요금이 청구될 수 있음


API가 사용하는 데이터 형식 - JSON
 JavaScript Object Notation 의 약자. 직역하면 '자바스크립트 객체 표기법'
 데이터를 저장하거나 전송할 때 많이 사용되는 경량의 텍스트 기반의 데이터 형식
 통신 방법이나 프로그래밍 문법이 아니라 단순히 데이터를 표현하는 표현 방법 중 하나
 특징
 - 데이터는 중괄호( {} ) 로 둘러싸인 키 - 값 쌍의 집합으로 표현됨
 - 키 = 문자열 / 값 = 다양한 데이터 유형을 가질 수 있다
 - 값은 쉼표 ( , ) 로 구분됨

ex)
import requests

url = 'https://fakestoreapi.com/carts' # 요청을 보내는 서버의 주소
response = requests.get(url) # 해당 서버(url)에 데이터를 달라고 요청을 보내는 함수

print(response.json()) # .json() : 내부의 데이터를 JSON(파이썬의 딕셔너리와 비슷함) 형태로 변환해주는 함수


파싱(Parsing) : 데이터를 의미 있는 구조로 분석하고 해석하는 과정(=원하는 형태로 변환)

json.loads() : JSON 형식의 문자열을 파싱하여 Python Dictionary로 변환





클라이언트 -----request------> 서버 --------query--------> DB
클라이언트 <----response----> 서버 <------query---------- DB