Data Structure

비시퀀스 데이터 구조

 - set : 고유한 항목들의 정렬되지 않은 컬렉션

 세트 메서드
 - .add(x) : 세트 s에 항목 x를 추가. 이미 x가 있다면 변화 없음
 - .clear() : 세트 s의 모든 항목을 제거
 - .remove(x) : 세트 s에서 항목 x를 제거. 항목 x가 없을 경우 Key error
 - .pop() : 세트 s에서 랜덤하게 항목을 반환하고, 해당 항목을 제거
 - .discard(x) : 세트 s에서 항목 x를 제거. remove와 달리 error 없음
 - .update(iterable) : 세트 s에 다른 iterable 요소를 추가

 세트 pop
 - 무작위 -> 정수와 문자열은 서로 다른 타입이며, 정수 타입의 경우 정수 값 자체가 해시 값이 됨 / 문자열은 가변적인 길이를 갖고 있고, 문자열의 해시 값은 문자열의 내용에 따라 다르게 계산됨


 - dictionary : 고유한 항목들의 정렬되지 않은 컬렉션

 딕셔너리 메서드
 - .clear() : 딕셔너리의 모든 키/값 쌍을 제거
 - .get(k) :  키 k에 연결된 값을 반환(키가 없으면 None을 반환)
 - .get(k, v) : 키 k에 연결된 값을 반환하거나 키가 없으면 기본 값으로 v를 반환
 - .keys() : 딕셔너리의 키를 모은 객체를 반환
 - .values() : 딕셔너리의 값을 모은 객체를 반환
 - .items() : 딕셔너리의 키/값 쌍을 모은 객체를 반환



데이터 타입과 복사
 - 파이썬에서는 데이터의 분류에 따라 복사가 달라짐
 - "변경 가능한 데이터 타입"과 "변경 불가능한 데이터 타입"을 다르게 다룸


얕은 복사

# 슬라이싱
[:]
# copy
.copy()

! 한계 : 2차원 리스트 복사 X


깊은 복사
import copy

copy.deepcopy()


ㅡㅡㅡㅡㅡㅡㅡ오후 수업ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

참조에 의한 복사 : 값 바뀜

얕은 복사 : 일차원 레벨 값 안 바뀜 / 이차원 레벨 값 바뀜

깊은 복사 : 이차원 레벨 값 안 바뀜